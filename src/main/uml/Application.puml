@startuml

package "<LANG>parser" {
Lexer    <..  Parser
Parser   <..  Listener
Parser   <..  Visitor
Listener <|.. BaseListener
Visitor  <|.. BaseVisitor

Class Parser {

}
Class Lexer {

}

Interface Visitor<T> {
    visit<rule>()
}
Interface Listener {
    enter<rule>()
    exit<rule>()
}

Class BaseVisitor<T> {
}
Class BaseListener {
}

}

package "graph" {
Edge   o-- BaseGraph
Vertex o-- BaseGraph
BaseGraph <|.. CDG
BaseGraph <|.. SDG

abstract Class BaseGraph
Class Vertex
Class Edge
Class CDG
Class SDG
}


package "application" {

ListenerGeneric     <|-- ListenerSpec
VisitorGeneric      <|-- VisitorSpec
BaseListener <|-- ListenerSpec
BaseVisitor  <|-- VisitorSpec

Interface ListenerGeneric {
}
Interface VisitorGeneric<T> {
}


Class ListenerSpec {
}
Class VisitorSpec<T> {
}

GraphBuilder ..> BaseGraph

GraphBuilder <|.. CDGBuilder
GraphBuilder <|.. SDGBuilder

GraphBuilder ..> ListenerGeneric
GraphBuilder ..> VisitorGeneric

Grader --> SDG

abstract GraphBuilder

Class CDGBuilder
Class SDGBuilder
Class Grader


}


@enduml