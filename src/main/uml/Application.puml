@startuml

package "<LANG>parser" {
Lexer    <..  Parser
Parser   <..  Listener
Listener <|.. BaseListener

Class Parser {

}
Class Lexer {

}


Interface Listener {
    enter<rule>()
    exit<rule>()
}

Class BaseListener {
}

}

package "graph" {
Edge   o-- BaseGraph
Vertex o-- BaseGraph
BaseGraph <|.. CDG
BaseGraph <|.. SDG
VertexType <-- Vertex
EdgeType <-- Edge
SDG --> CDG

abstract Class BaseGraph
Class Vertex
Class Edge
Class CDG
Class SDG
enum VertexType
enum EdgeType

}


package "application" {
ParserAdministrator --> Lexer
ParserAdministrator --> Parser
ParserAdministrator --> Listener
ParserAdministrator --> ListenerSpec
CDGBuilder --> ParserAdministrator
CDGBuilder --> CDG
SDGBuilder --> SDG
BaseListener <|-- ListenerSpec
Grader --> SDG
Grader --> CDG

Class CDGBuilder
Class SDGBuilder
Class Grader

Class ParserAdministrator {
    getLexer()
    getParser()
}
Class ListenerSpec {
}

}


@enduml